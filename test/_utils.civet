{ transform, type Options as OrigOptions } from ../src/transform.civet
{ operator equal, ok: assert } from node:assert/strict

export interface Options extends OrigOptions
    filename?: string

defaultOpts := { filename: "./code.tsx" } as const
export options: Options .= { ...defaultOpts }

function transforms(source: string)
    transform source, options.filename ?? "./code.tsx", { -header, ...options }

export operator becomes(source: string, output: string)
    transforms source |> &.trim() equal output.trim()

export operator contains(source: string, output: string)
    transformed := transforms source
    assert output.trim() is in transformed, `Expected ${output} to be in ${transformed} - (${JSON.stringify output} in ${JSON.stringify transformed})`

export function setOptions(opts: Partial<Options>)
    options = { ...defaultOpts, ...opts }

export type Tests = Record<string, =>>