ts from typescript
{ SyntaxKind, createSourceFile } := ts
{ Emitter } from ./emitter.civet
// This is the only file with an exported .d.ts!

export interface Options
    /**
      * If false, don't add a header to the generated file.
      * @default true
      */
    header?: boolean


export function transform(
  tscode: string
  path: string
  options: Options = {}
): string
    { header } := options
    parsed .= createSourceFile `${path}.tsx`, tscode, ts.ScriptTarget.Latest, true

    writer := new Emitter parsed

    if header !== false
        writer.write `// Generated by ts2civet: ${new Date()}\n\n`

    writer.node parsed

    result .= writer.toString()
    if writer.jsxUsed
        result = '"civet coffeeJSX" // ts2civet does not implement JSX civetifying yet. Feel free to move this flag to your civet config, or manually rewrite the JSX.\n' + result // TODO FIX! this is like . bad !
    result